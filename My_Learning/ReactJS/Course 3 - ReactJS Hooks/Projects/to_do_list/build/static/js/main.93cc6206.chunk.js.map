{"version":3,"sources":["Container/Container.js","Components/Dropdown.js","Components/Heading.js","Components/TextField.js","Components/Button.js","Components/Table.js","redux/types/ToDoListType.js","redux/actions/ToDoListAction.js","Themes/ToDoListDarkTheme.js","Themes/ThemesManager.js","Themes/ToDoListLightTheme.js","Themes/ToDoListPrimaryTheme.js","ToDoList/ToDoList.js","App.js","reportWebVitals.js","redux/reducers/ToDoListReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["Container","styled","div","props","theme","bgColor","color","Dropdown","select","hoverTextColor","hoverBgColor","Heading3","h1","h2","h3","h4","h5","Input","input","Label","span","TextField","label","Button","button","borderButton","Table","table","Thead","thead","Tr","tbody","tr","Th","td","th","backgroundColor","ADD_NEW_TASK","UPDATE_TASK","DELETE_TASK","EDIT_TASK","DONE_TASK","CHANGE_THEME","doneTask","taskDone","type","editTask","taskEdit","deleteTask","taskId","ToDoListDarkTheme","borderRadiusButton","borderColor","themes","id","name","ToDoList","state","taskName","disabled","renderTaskToDo","taskList","filter","task","completed","map","index","style","verticalAlign","className","onClick","setState","dispatch","renderTaskCompleted","renderTheme","value","this","onChange","e","themeId","target","changeTheme","console","log","newTask","Date","now","addNewTask","taskUpdate","prevProps","prevState","Component","connect","ToDoListReducer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","trim","alert","findIndex","newTaskList","taskListUpdate","find","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93cc6206.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const ContainerFluid = styled.div`\r\n    background-color: ${props => props.theme.bgColor};\r\n    color: ${props => props.theme.color};\r\n    border: 5px solid ${props => props.theme.color};\r\n    padding: 15px;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n    \r\n\r\n`\r\n\r\nexport const Container = styled.div`\r\n    background-color: ${props => props.theme.bgColor};\r\n    color: ${props => props.theme.color};\r\n    border: 5px solid ${props => props.theme.color};\r\n    padding: 15px;\r\n    margin-right: auto;\r\n    margin-left: auto;\r\n\r\n`\r\n\r\n\r\n","import styled from 'styled-components';\r\n\r\n\r\nexport const Dropdown = styled.select`\r\n    width: 100%;\r\n    height: 50px;\r\n    font-size: 100%;\r\n    font-weight: bold;\r\n    cursor: pointer;\r\n    border-radius: 0;\r\n    background-color: ${props=>props.theme.bgColor};\r\n    border: 2px solid ${props => props.theme.color};\r\n    color: ${props => props.theme.color};\r\n    padding: 10px;\r\n    padding-right: 38px;\r\n    appearance: none;\r\n    -webkit-appearance: none;\r\n    -moz-appearance: none;\r\n    /* Adding transition effect */\r\n    transition: color 0.3s ease, background-color 0.3s ease, border-bottom-color 0.3s ease;\r\n    &:hover {\r\n        color: ${props => props.theme.hoverTextColor};\r\n        background-color: ${props=>props.theme.hoverBgColor};\r\n        border-bottom-color: #DCDCDC;\r\n    }\r\n`","import styled from 'styled-components';\r\n\r\n\r\n\r\nexport const Heading1 = styled.h1`\r\n    font-size:4rem;\r\n    font-weight:300;\r\n    line-height:1.2;\r\n    color: ${props => {return props.theme.color}}\r\n`\r\n\r\nexport const Heading2 = styled.h2`\r\n    font-size:3rem;\r\n    font-weight:300;\r\n    line-height:1.2;\r\n    color: ${props => {return props.theme.color}}\r\n\r\n`\r\n\r\nexport const Heading3 = styled.h3`\r\n    font-size:2rem;\r\n    font-weight:300;\r\n    line-height:1.2;\r\n    color: ${props => {return props.theme.color}}\r\n\r\n`\r\n\r\nexport const Heading4 = styled.h4`\r\n    font-size:1rem;\r\n    font-weight:300;\r\n    line-height:1.2;\r\n    color: ${props => {return props.theme.color}}\r\n    \r\n`\r\n\r\nexport const Heading5 = styled.h5`\r\n    font-size:0.5rem;\r\n    font-weight:300;\r\n    line-height:1.2;\r\n    color: ${props => {return props.theme.color}}\r\n\r\n`\r\n\r\n","import React from 'react';\r\n\r\nimport styled from 'styled-components';\r\n\r\n\r\nconst Input = styled.input`\r\n    border: 1px solid ${props => props.theme.color};\r\n    min-height:35px;\r\n    height:35px;\r\n    font-size:17px;\r\n    width:auto;\r\n    display:initial;\r\n`\r\n\r\nconst Label = styled.span`\r\n    color:${props => props.theme.color};\r\n    width:auto;\r\n\r\n`\r\n\r\n\r\nexport const TextField = ({ label, ...props }) => {\r\n    return <span>\r\n        <Label>\r\n            {label}\r\n        </Label>\r\n        <br/> \r\n        <Input {...props}/>\r\n    </span>\r\n}\r\n","import styled from 'styled-components'\r\n//----------------button-------------------\r\nexport const Button = styled.button`\r\n    apperance:none;\r\n    background-color: ${props => props.theme.bgColor};\r\n    color: ${props => props.theme.color};\r\n    border: ${props => props.theme.borderButton};\r\n    padding: .25em .5em;\r\n    transition: all .5s;\r\n    font-size:17px;\r\n    &:hover {\r\n        color: ${props => props.theme.hoverTextColor};\r\n        background-color:${props => props.theme.hoverBgColor};\r\n        border: ${props => props.theme.borderButton};\r\n    };\r\n`;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import styled from 'styled-components';\r\n\r\n\r\n\r\n\r\nexport const Table = styled.table`\r\n    color: ${props => props.theme.color};\r\n    width: 100%;\r\n    max-width: 100%;\r\n    margin-bottom: 1rem;\r\n    background-color: transparent;\r\n  \r\n    border-spacing: 2px;\r\n    border-color: ${props => props.theme.color};\r\n  \r\n`\r\nexport const Thead = styled.thead`\r\n    display: table-header-group;\r\n    vertical-align: middle;\r\n    border:1px solid ${props => props.theme.color};\r\n\r\n`\r\n\r\nexport const Tbody = styled.tbody`\r\n    display: table-row-group;\r\n    vertical-align: middle;\r\n    border-color: inherit;\r\n`\r\nexport const Tr = styled.tr`\r\n    display: table-row;\r\n    vertical-align: inherit;\r\n    border:1px solid ${props => props.theme.color};\r\n    \r\n\r\n\r\n`\r\nexport const Td = styled.td`\r\n    padding: .75rem;\r\n    vertical-align: top;\r\n    border: 1px solid ${props => props.theme.color};\r\n`\r\n\r\n\r\nexport const Th = styled.th`\r\n    background-color: ${props => props.theme.backgroundColor}\r\n    color: ${props => props.theme.color}\r\n    vertical-align: bottom;\r\n    text-align: inherit;\r\n    border-top: 1px solid ${props => props.theme.color};\r\n    padding: .75rem;\r\n    vertical-align: top;\r\n    border-bottom: 1px solid ${props => props.theme.color};\r\n`\r\n\r\n","const ADD_NEW_TASK = 'ADD_NEW_TASK';\r\nconst UPDATE_TASK = 'UPDATE_TASK';\r\nconst DELETE_TASK = 'DELETE_TASK';\r\nconst EDIT_TASK = 'EDIT_TASK';\r\nconst DONE_TASK = 'DONE_TASK';\r\nconst CHANGE_THEME = 'CHANGE_THEME';\r\n\r\nexport {\r\n    ADD_NEW_TASK,\r\n    UPDATE_TASK,\r\n    DELETE_TASK,\r\n    CHANGE_THEME,\r\n    EDIT_TASK,\r\n    DONE_TASK,\r\n}","import { ADD_NEW_TASK, UPDATE_TASK, EDIT_TASK, DELETE_TASK, CHANGE_THEME, DONE_TASK } from \"../types/ToDoListType\";\r\n\r\nconst addNewTask = (newTask) => ({\r\n    type: ADD_NEW_TASK,\r\n    newTask\r\n})\r\n\r\nconst doneTask = (taskDone) => ({\r\n    type: DONE_TASK,\r\n    taskDone\r\n})\r\n\r\nconst updateTask = (taskUpdate) => ({\r\n    type: UPDATE_TASK,\r\n    taskUpdate\r\n})\r\n\r\nconst editTask = (taskEdit) => ({\r\n    type: EDIT_TASK,\r\n    taskEdit\r\n})\r\n\r\nconst deleteTask = (taskId) => ({\r\n    type: DELETE_TASK,\r\n    taskId\r\n})\r\n\r\nconst changeTheme = (themeId) => ({\r\n    type: CHANGE_THEME,\r\n    themeId\r\n})\r\n\r\nexport {\r\n    addNewTask,\r\n    updateTask,\r\n    editTask,\r\n    deleteTask,\r\n    changeTheme,\r\n    doneTask,\r\n}","export const ToDoListDarkTheme = {\r\n    bgColor: '#343a40',\r\n    color:'#fff',\r\n    borderButton: '1px solid #fff',\r\n    borderRadiusButton: 'none',\r\n    hoverTextColor: '#343a40',\r\n    hoverBgColor:'#fff',\r\n    borderColor:'#343a40'\r\n}","import { ToDoListDarkTheme } from \"./ToDoListDarkTheme\";\r\nimport { ToDoListLightTheme } from \"./ToDoListLightTheme\";\r\nimport { ToDoListPrimaryTheme } from \"./ToDoListPrimaryTheme\";\r\n\r\nexport const themes = [\r\n    {\r\n        id: 'dark_theme',\r\n        name: 'Dark Theme',\r\n        theme: ToDoListDarkTheme\r\n    },\r\n    {\r\n        id: 'light_theme',\r\n        name: 'Light Theme',\r\n        theme: ToDoListLightTheme\r\n    },\r\n    {\r\n        id: 'primay_theme',\r\n        name: 'Primary Theme',\r\n        theme: ToDoListPrimaryTheme\r\n    }\r\n];","export const ToDoListLightTheme = {\r\n    bgColor: '#fff',\r\n    color:'#7952b3',\r\n    borderButton: '1px solid #7952b3',\r\n    borderRadiusButton: 'none',\r\n    hoverTextColor: '#fff',\r\n    hoverBgColor:'#7952b3',\r\n    borderColor:'#7952b3'\r\n\r\n}","export const ToDoListPrimaryTheme = {\r\n    bgColor: '#fff',\r\n    color:'#343a40',\r\n    borderButton: '1px solid #343a40',\r\n    borderRadiusButton: 'none',\r\n    hoverTextColor: '#fff',\r\n    hoverBgColor:'#343a40',\r\n    borderColor:'#343a40'\r\n}","import React, { Component } from 'react';\r\nimport { Container } from '../Container/Container';\r\nimport { ThemeProvider } from 'styled-components';\r\n// import { ToDoListDarkTheme } from '../Themes/ToDoListDarkTheme';\r\n// import { ToDoListLightTheme } from '../Themes/ToDoListLightTheme';\r\n// import { ToDoListPrimaryTheme } from '../Themes/ToDoListPrimaryTheme';\r\nimport { Dropdown } from '../Components/Dropdown';\r\nimport { Heading3 } from '../Components/Heading';\r\nimport { TextField } from '../Components/TextField';\r\nimport { Button } from '../Components/Button';\r\nimport { Table, Th, Tr, Thead } from '../Components/Table';\r\nimport { connect } from 'react-redux';\r\nimport { addNewTask, changeTheme, deleteTask, doneTask, editTask, updateTask } from '../redux/actions/ToDoListAction';\r\nimport { themes } from '../Themes/ThemesManager';\r\n\r\nclass ToDoList extends Component {\r\n\r\n    state = {\r\n        taskName: '',\r\n        disabled: true,\r\n    }\r\n\r\n    // deleteTask = (taskId) => {\r\n    //     this.props.dispatch(this.deleteTask(taskId));\r\n    // }\r\n\r\n    renderTaskToDo = () => {\r\n        return this.props.taskList.filter(task => !task.completed).map((task, index) => {\r\n            return <Tr key={index}>\r\n                <Th style={{ verticalAlign: 'middle' }}>{task.name}</Th>\r\n                <Th className=\"text-right\">\r\n\r\n                    <Button><i className=\"fa fa-edit\" onClick={() => {\r\n                        this.setState({\r\n                            disabled: false,\r\n                        }, () => this.props.dispatch(editTask(task)))\r\n                    }}></i></Button>\r\n\r\n                    <Button onClick={() => {\r\n                        let taskDone = { ...task, completed: true };\r\n                        this.props.dispatch(doneTask(taskDone));\r\n                    }}><i className=\"fa fa-check\"></i></Button>\r\n\r\n                    <Button onClick={() => this.props.dispatch(deleteTask(task.id))}><i className=\"fa fa-trash\"></i></Button>\r\n                </Th>\r\n            </Tr>\r\n        })\r\n    }\r\n\r\n    renderTaskCompleted = () => {\r\n        return this.props.taskList.filter(task => task.completed).map((task, index) => {\r\n            return <Tr key={index}>\r\n                <Th style={{ verticalAlign: 'middle' }}>{task.name}</Th>\r\n                <Th className=\"text-right\">\r\n                    <Button><i className=\"fa fa-trash\" onClick={() => this.props.dispatch(deleteTask(task.id))}></i></Button>\r\n                </Th>\r\n            </Tr>\r\n        })\r\n    }\r\n\r\n    renderTheme = () => {\r\n        return themes.map((theme, index) => {\r\n            return <option value={theme.id} key={index}>\r\n                {theme.name}\r\n            </option>\r\n        })\r\n    }\r\n\r\n    // componentWillReceiveProps(newProps) {\r\n    //     console.log('this.props', this.props);\r\n    //     console.log('newProps', newProps);\r\n    //     this.setState({\r\n    //         taskName: newProps.taskEdit.name,\r\n    //     })\r\n    // }\r\n\r\n    // static getDerivedStateFromProps(newProps, currentState) {\r\n    //     console.log(newProps);\r\n    //     let newState = {...currentState, taskName: newProps.taskEdit.name};\r\n\r\n    //     return newState;\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <ThemeProvider theme={this.props.theme}>\r\n                <Container className='w-50 mt-5'>\r\n                    <Dropdown onChange={(e) => {\r\n                        let themeId = e.target.value;\r\n                        this.props.dispatch(changeTheme(themeId))\r\n                    }}>\r\n                        {this.renderTheme()}\r\n                    </Dropdown>\r\n                    <Heading3>To Do List</Heading3>\r\n                    <TextField label=\"Task name\" className=\"w-50\" name=\"taskName\"\r\n                        onChange={(e) => {\r\n                            this.setState({\r\n                                taskName: e.target.value,\r\n                            }, () => { console.log(this.state) });\r\n                        }} value={this.state.taskName} />\r\n\r\n                    <Button className=\"ml-2\" onClick={() => {\r\n                        let { taskName } = this.state;\r\n                        let newTask = {\r\n                            id: Date.now(),\r\n                            name: taskName,\r\n                            completed: false,\r\n                        };\r\n\r\n                        this.props.dispatch(addNewTask(newTask));\r\n                    }}><i className='fa fa-plus'></i> Add Task</Button>\r\n\r\n                    <Button className=\"ml-2\" disabled={this.state.disabled}\r\n                        onClick={() => {\r\n                            let {taskName} = this.state;\r\n                            this.setState({\r\n                                disabled: true,\r\n                                taskName: '',\r\n                            }, () => { this.props.dispatch(updateTask(taskName)); })\r\n                        }}>\r\n                        <i className='fa fa-upload'></i> Update Task\r\n                    </Button>\r\n\r\n                    <hr />\r\n                    <Heading3>Task To Do</Heading3>\r\n                    <Table>\r\n                        <Thead>\r\n                            {this.renderTaskToDo()}\r\n                        </Thead>\r\n                    </Table>\r\n                    <Heading3>Task Completed</Heading3>\r\n                    <Table>\r\n                        <Thead>\r\n                            {this.renderTaskCompleted()}\r\n                        </Thead>\r\n                    </Table>\r\n                </Container>\r\n            </ThemeProvider>\r\n        )\r\n    }\r\n\r\n    // Đây là lifecycle trả về props cũ và state cũ\r\n    // chạy sau khi render\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.taskEdit.id !== this.props.taskEdit.id) {\r\n            this.setState(\r\n                {\r\n                    taskName: this.props.taskEdit.name,\r\n                }\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        theme: state.ToDoListReducer.theme,\r\n        taskList: state.ToDoListReducer.taskList,\r\n        taskEdit: state.ToDoListReducer.taskEdit,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(ToDoList)\r\n","import './App.css';\n// import LifeCycleReact from './LifeCycleReact/LifeCycleReact';\nimport ToDoList from './ToDoList/ToDoList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToDoList />\n      {/* <LifeCycleReact /> */}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { themes } from \"../../Themes/ThemesManager\";\r\nimport { ToDoListDarkTheme } from \"../../Themes/ToDoListDarkTheme\";\r\nimport { ADD_NEW_TASK, CHANGE_THEME, DELETE_TASK, DONE_TASK, EDIT_TASK, UPDATE_TASK } from \"../types/ToDoListType\";\r\n\r\nconst initialState = {\r\n    theme: ToDoListDarkTheme,\r\n    taskList: [\r\n        { id: 1, name: 'Task One', completed: false },\r\n        { id: 2, name: 'Task Two', completed: false },\r\n        { id: 3, name: 'Task Three', completed: true },\r\n        { id: 4, name: 'Task Four', completed: true },\r\n    ],\r\n    taskEdit: { id: '', name: '', completed: false },\r\n}\r\n\r\nconst ToDoListReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_TASK: {\r\n            let { newTask } = action;\r\n\r\n            // check task empty\r\n            if (newTask.name.trim() === '') {\r\n                alert('Task name is required!');\r\n                return { ...state };\r\n            }\r\n\r\n            let index = state.taskList.findIndex(task => task.name === newTask.name);\r\n            // check task exist\r\n            if (index !== -1) {\r\n                alert('Task name already exist!');\r\n                return { ...state };\r\n            }\r\n            state.taskList = [...state.taskList, newTask];\r\n            return { ...state };\r\n        }\r\n\r\n        case DONE_TASK: {\r\n            let newTaskList = state.taskList;\r\n            let { taskDone } = action;\r\n            // find task in task list\r\n            let index = newTaskList.findIndex(task => task.id === taskDone.id);\r\n            if (index !== -1) {\r\n                newTaskList[index] = taskDone;\r\n            }\r\n            state.taskList = [...newTaskList];\r\n            return { ...state };\r\n        }\r\n\r\n        case EDIT_TASK: {\r\n            return { ...state, taskEdit: action.taskEdit };\r\n        }\r\n\r\n        case UPDATE_TASK: {\r\n            state.taskEdit = {...state.taskEdit, name: action.taskUpdate };\r\n            \r\n            let taskListUpdate = [...state.taskList];\r\n\r\n            let index = taskListUpdate.findIndex(task => task.id === state.taskEdit.id);\r\n\r\n            if (index !== -1) {\r\n                taskListUpdate[index] = state.taskEdit;\r\n            }\r\n\r\n            state.taskList = taskListUpdate;\r\n            state.taskEdit = {id: '', name: '', completed: false};\r\n\r\n            return {...state};\r\n        }\r\n\r\n        case DELETE_TASK: {\r\n            console.log(action);\r\n            state.taskList = state.taskList.filter(task => task.id !== action.taskId);\r\n            return { ...state };\r\n        }\r\n\r\n        case CHANGE_THEME: {\r\n            let theme = themes.find(theme => theme.id === action.themeId).theme;\r\n            if (theme) {\r\n                state.theme = { ...theme };\r\n            }\r\n\r\n            return { ...state };\r\n        }\r\n\r\n        default:\r\n            return { ...state };\r\n    }\r\n}\r\n\r\nexport default ToDoListReducer;","import { combineReducers } from \"redux\";\r\nimport ToDoListReducer from \"./ToDoListReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    ToDoListReducer,\r\n})\r\n\r\nexport default rootReducer;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport rootReducer from './redux/reducers/rootReducer';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}