{"version":3,"sources":["redux/types/UserManagerType.js","redux/actions/UserManagerAction.js","UserManager/RegisterForm.js","UserManager/UserList.js","UserManager/UserManager.js","App.js","reportWebVitals.js","redux/reducers/UserManagerReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["ADD_NEW_USER","EDIT_USER","UPĐATE_USER","DELETE_USER","addNewUser","newUser","type","deleteUser","userId","editUser","userEdit","updateUser","userUpdate","RegisterForm","state","userRegister","id","username","fullName","password","email","phoneNumber","role","disabledUpdateBtn","readOnlyUsername","handleOnchange","event","target","name","value","newUserRegister","setState","handleRegister","currentUserList","props","userList","length","findIndex","user","dispatch","Swal","fire","handleUpdate","renderRoles","roles","map","index","className","style","fontWeight","onChange","this","readOnly","placeholder","onClick","disabled","prevProps","prevState","Component","connect","UserManagerReducer","UserList","renderUserList","scope","UserManager","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","indexOfUserFindById","filter","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17715f0a.chunk.js","sourcesContent":["const ADD_NEW_USER = 'ADD_NEW_USER';\r\nconst EDIT_USER = 'EDIT_USER';\r\nconst UPĐATE_USER = 'UPĐATE_USER';\r\nconst DELETE_USER = 'DELETE_USER';\r\n\r\nexport {\r\n    ADD_NEW_USER,\r\n    EDIT_USER,\r\n    UPĐATE_USER,\r\n    DELETE_USER,\r\n}","import { ADD_NEW_USER, DELETE_USER, EDIT_USER, UPĐATE_USER } from \"../types/UserManagerType\";\r\n\r\nconst addNewUser = (newUser) => ({\r\n    type: ADD_NEW_USER,\r\n    newUser,\r\n});\r\n\r\nconst deleteUser = (userId) => ({\r\n    type: DELETE_USER,\r\n    userId,\r\n});\r\n\r\nconst editUser = (userEdit) => ({\r\n    type: EDIT_USER,\r\n    userEdit,\r\n});\r\n\r\nconst updateUser = (userUpdate) => ({\r\n    type: UPĐATE_USER,\r\n    userUpdate,\r\n});\r\n\r\nexport {\r\n    addNewUser,\r\n    deleteUser,\r\n    editUser,\r\n    updateUser,\r\n}","import React, { Component } from 'react'\r\nimport roles from '../Data/roles.json';\r\nimport Swal from 'sweetalert2'\r\nimport { addNewUser, updateUser } from '../redux/actions/UserManagerAction';\r\nimport { connect } from 'react-redux';\r\n\r\nclass RegisterForm extends Component {\r\n\r\n    state = {\r\n        userRegister: {\r\n            id: 0,\r\n            username: '',\r\n            fullName: '',\r\n            password: '',\r\n            email: '',\r\n            phoneNumber: '',\r\n            role: '',\r\n        },\r\n        disabledUpdateBtn: true,\r\n        readOnlyUsername: false,\r\n    }\r\n\r\n    handleOnchange = (event) => {\r\n        let { name, value } = event.target;\r\n        let newUserRegister = { ...this.state.userRegister, [name]: value }\r\n\r\n        this.setState({\r\n            userRegister: newUserRegister,\r\n        });\r\n    }\r\n\r\n    handleRegister = () => {\r\n        let currentUserList = this.props.userList;\r\n        let newUser = { ...this.state.userRegister, id: currentUserList.length + 1 }\r\n\r\n        // find user in current user list by username\r\n        let indexOfUserFoundByUserName = currentUserList.findIndex(user => user.username === newUser.username);\r\n        // // if username exist\r\n        if (indexOfUserFoundByUserName !== -1) {\r\n            Swal.fire(\r\n                'Fail!',\r\n                'The username is already in use.',\r\n                'error'\r\n            )\r\n            return;\r\n        } else { // else if username does not exist\r\n            this.setState({\r\n                userRegister: {\r\n                    id: 0,\r\n                    username: '',\r\n                    fullName: '',\r\n                    password: '',\r\n                    email: '',\r\n                    phoneNumber: '',\r\n                    role: '',\r\n                },\r\n                disabledUpdateBtn: true,\r\n            }, () => {\r\n                this.props.dispatch(addNewUser(newUser));\r\n                Swal.fire(\r\n                    'Register Successfully!',\r\n                    'Your account has been successfully created.',\r\n                    'success'\r\n                );\r\n            })\r\n        }\r\n    }\r\n\r\n    handleUpdate = () => {\r\n        this.setState({\r\n            disabledUpdateBtn: true,\r\n            readOnlyUsername: false\r\n        }, () => {\r\n            this.props.dispatch(updateUser(this.state.userRegister));\r\n            Swal.fire(\r\n                'Update Successfully!',\r\n                'Your account has been successfully updated.',\r\n                'success'\r\n            );\r\n        })\r\n    }\r\n\r\n    renderRoles = () => {\r\n        return roles.map((role, index) => {\r\n            return <option key={index} value={role.name}>\r\n                {role.name}\r\n            </option>\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"mt-4 border\">\r\n                <header className=\"bg-dark text-light p-2\" style={{ fontWeight: 'bold' }}>Form Đăng Ký</header>\r\n                <div className=\"row p-3\">\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Tài khoản</label>\r\n                            <input type=\"text\" name=\"username\" className=\"form-control\" onChange={this.handleOnchange} value={this.state.userRegister.username} readOnly={this.state.readOnlyUsername} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Mật khẩu</label>\r\n                            <input type=\"text\" name=\"password\" className=\"form-control\" onChange={this.handleOnchange} value={this.state.userRegister.password} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Email address</label>\r\n                            <input type=\"text\" name='email' className=\"form-control\" placeholder=\"email@example.com\" onChange={this.handleOnchange} value={this.state.userRegister.email} />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-6\">\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Họ & tên</label>\r\n                            <input type=\"text\" name=\"fullName\" className=\"form-control\" onChange={this.handleOnchange} value={this.state.userRegister.fullName} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Số điện thoại</label>\r\n                            <input type=\"text\" name=\"phoneNumber\" className=\"form-control\" placeholder=\"+84\" onChange={this.handleOnchange} value={this.state.userRegister.phoneNumber} />\r\n                        </div>\r\n                        <div className=\"mb-3\">\r\n                            <label className=\"form-label\">Loại người dùng</label>\r\n                            <select className=\"form-control\" value={this.state.userRegister.role} name=\"role\" onChange={this.handleOnchange}>\r\n                                {this.renderRoles()}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"pl-3\">\r\n                        <button className=\"btn btn-success\" onClick={() => {\r\n                            this.handleRegister()\r\n                        }}>Đăng ký</button>\r\n\r\n                        <button className=\"btn btn-primary ml-2\" disabled={this.state.disabledUpdateBtn}\r\n                            onClick={() => { this.handleUpdate() }}>\r\n                            Cập nhật\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n\r\n    // This is lifecycle return prev props and prev state\r\n    // Run after render\r\n    componentDidUpdate(prevProps, prevState) {\r\n        let userEdit = this.props.userEdit;\r\n        if (prevProps.userEdit.id !== userEdit.id) {\r\n            this.setState({\r\n                userRegister: { ...userEdit },\r\n                disabledUpdateBtn: false,\r\n            })\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userList: state.UserManagerReducer.userList,\r\n        userEdit: state.UserManagerReducer.userEdit,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(RegisterForm);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { deleteUser, editUser } from '../redux/actions/UserManagerAction'\r\n\r\nclass UserList extends Component {\r\n\r\n    renderUserList = () => {\r\n        return this.props.userList.map((user, index) => {\r\n            return <tr key={index}>\r\n                <th scope=\"row\">{user.id}</th>\r\n                <td>{user.username}</td>\r\n                <td>{user.fullName}</td>\r\n                <td>{user.password}</td>\r\n                <td>{user.email}</td>\r\n                <td>{user.phoneNumber}</td>\r\n                <td>{user.role}</td>\r\n                <td>\r\n\r\n                    <button className=\"btn btn-primary btn-sm\"\r\n                        onClick={() => {this.props.dispatch(editUser(user))}}>\r\n                        Chỉnh sửa\r\n                    </button>\r\n\r\n                    <button className=\"btn btn-danger btn-sm ml-2\"\r\n                        onClick={() => {this.props.dispatch(deleteUser(user.id))}}>\r\n                        Xoá\r\n                    </button>\r\n\r\n                </td>\r\n            </tr>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"mt-4 border\">\r\n                <header className=\"bg-dark text-light p-2\" style={{ fontWeight: 'bold' }}>Danh sách người dùng</header>\r\n                <div className=\"p-3\">\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">#</th>\r\n                                <th scope=\"col\">Tài khoản</th>\r\n                                <th scope=\"col\">Họ & tên</th>\r\n                                <th scope=\"col\">Mật khẩu</th>\r\n                                <th scope=\"col\">Email</th>\r\n                                <th scope=\"col\">Số điện thoại</th>\r\n                                <th scope=\"col\">Loại người dùng</th>\r\n                                <th scope=\"col\">Thao tác</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.renderUserList()}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        userList: state.UserManagerReducer.userList,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserList)\r\n","import React, { Component } from 'react'\r\nimport RegisterForm from './RegisterForm'\r\nimport UserList from './UserList'\r\n\r\nexport default class UserManager extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <h3 className=\"text-center mt-3\">User Manager</h3>\r\n                <RegisterForm />\r\n                <UserList />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import './App.css';\nimport UserManager from './UserManager/UserManager';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UserManager />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { ADD_NEW_USER, DELETE_USER, EDIT_USER, UPĐATE_USER } from \"../types/UserManagerType\";\r\n\r\nconst initialState = {\r\n    userList: [\r\n        { id: 1, username: 'admin', fullName: 'Nguyễn Văn A', password: '123456', email: 'admin@host.it', phoneNumber: '0382836523', role: 'ROLE_ADMIN' },\r\n        { id: 2, username: 'user', fullName: 'Trần Văn B', password: '654321', email: 'user@host.it', phoneNumber: '0123987654', role: 'ROLE_USER' },\r\n        { id: 3, username: 'anonymous', fullName: 'Đào Thu C', password: '000000', email: 'anonymous@host.it', phoneNumber: '0973652433', role: 'ROLE_ANONYMOUS' },\r\n    ],\r\n    userEdit: { id: 0, username: '', fullName: '', password: '', email: '', phoneNumber: '', role: 'ROLE_ADMIN' },\r\n}\r\n\r\n\r\nconst UserManagerReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_NEW_USER:\r\n            return { ...state, userList: [...state.userList, action.newUser] };\r\n\r\n        case EDIT_USER:\r\n            return { ...state, userEdit: action.userEdit };\r\n\r\n        case UPĐATE_USER:\r\n            let userUpdate = action.userUpdate;\r\n            let userList = [...state.userList];\r\n\r\n            // find user want to update in user list by id\r\n            let indexOfUserFindById = userList.findIndex(user => user.id === userUpdate.id);\r\n            // if user exist => update user info\r\n            if (indexOfUserFindById !== -1) {\r\n                userList[indexOfUserFindById] = userUpdate;\r\n            }\r\n            \r\n            state.userEdit = { id: 0, username: '', fullName: '', password: '', email: '', phoneNumber: '', role: 'ROLE_ADMIN' };\r\n            return { ...state, userList: userList };\r\n\r\n        case DELETE_USER:\r\n            return { ...state, userList: state.userList.filter(user => user.id !== action.userId) };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default UserManagerReducer;","import { combineReducers } from 'redux';\r\nimport UserManagerReducer from './UserManagerReducer';\r\n \r\nconst rootReducer = combineReducers({\r\n    UserManagerReducer,\r\n});\r\n\r\nexport default rootReducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport rootReducer from './redux/reducers/rootReducer';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}