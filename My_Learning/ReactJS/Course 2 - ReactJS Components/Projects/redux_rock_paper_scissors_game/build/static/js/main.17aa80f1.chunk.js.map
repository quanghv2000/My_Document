{"version":3,"sources":["RPSGame/Computer.js","RPSGame/Player.js","RPSGame/Result.js","RPSGame/RPSGame.js","App.js","reportWebVitals.js","redux/RPSReducer.js","redux/rootReducer.js","index.js"],"names":["Computer","keyframe","Date","now","className","style","width","src","this","props","computer","image","alt","height","Component","connect","state","RPSReducer","Player","renderRPS","dataRPS","map","item","index","border","value","onClick","betted","id","find","dispatch","bettedId","type","Result","result","numberOfWin","numberOfPlayed","RPSGame","playgame","count","randomComputerItem","setInterval","clearInterval","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rpsState","action","newDataRPS","console","log","randomNumber","Math","floor","random","newComputer","player","rootReducer","combineReducers","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.17aa80f1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Computer extends Component {\r\n  render() {\r\n    let keyframe = `@keyframes randomComputerItem${Date.now()} {\r\n            from {top: 0px;}\r\n            to {top: 200px;}\r\n        }`;\r\n\r\n    return (\r\n      <div className=\"text-center player\">\r\n        <style>{keyframe}</style>\r\n        <div className=\"thinking\">\r\n          <img\r\n            className=\"mt-3\"\r\n            style={{ width: 80 }}\r\n            src={this.props.computer.image}\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div className=\"speech-bubble\"></div>\r\n        <img\r\n          style={{ width: 200, height: 200 }}\r\n          src=\"https://res.cloudinary.com/dtjin3cf6/image/upload/v1668921109/Cyberlearn/ReactJS/Course%202%20-%20ReactJS%20Components/Projects/rock_paper_scissors_game/playerComputer_hnb385.png\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    computer: state.RPSReducer.computer,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(Computer);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Player extends Component {\r\n  renderRPS = () => {\r\n    return this.props.dataRPS.map((item, index) => {\r\n      const border = {\r\n        border: \"none\",\r\n      };\r\n      if (item.value) {\r\n        border.border = \"3px solid orange\";\r\n      }\r\n      return (\r\n        <div className=\"col-4\" key={index}>\r\n          <button\r\n            onClick={() => {\r\n              this.props.betted(item.id);\r\n            }}\r\n            className=\"btn-rps\"\r\n            style={border}\r\n          >\r\n            <img style={{ width: 35 }} src={item.image} alt=\"\" />\r\n          </button>\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-center player\">\r\n        <div className=\"thinking\">\r\n          <img\r\n            className=\"mt-3\"\r\n            style={{ width: 80 }}\r\n            src={this.props.dataRPS.find((item) => item.value === true).image}\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div className=\"speech-bubble\"></div>\r\n        <img\r\n          style={{ width: 200, height: 200 }}\r\n          src=\"https://res.cloudinary.com/dtjin3cf6/image/upload/v1668921109/Cyberlearn/ReactJS/Course%202%20-%20ReactJS%20Components/Projects/rock_paper_scissors_game/player_job22l.png\"\r\n          alt=\"\"\r\n        />\r\n\r\n        <div className=\"row\">{this.renderRPS()}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dataRPS: state.RPSReducer.dataRPS,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    betted: (bettedId) => {\r\n      let action = {\r\n        type: \"BETTED\",\r\n        bettedId,\r\n      };\r\n      // console.log('you betted! - ' + bettedId)\r\n      dispatch(action);\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Player);\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nclass Result extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"display-4 text-warning\">{this.props.result}</div>\r\n                <div className=\"display-4 text-success\">Số ván thắng: <span className=\"text-warning\">{this.props.numberOfWin}</span></div>\r\n                <div className=\"display-4 text-success\">Tổng số ván chơi: <span className=\"text-warning\">{this.props.numberOfPlayed}</span></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        result: state.RPSReducer.result,\r\n        numberOfWin: state.RPSReducer.numberOfWin,\r\n        numberOfPlayed: state.RPSReducer.numberOfPlayed,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Result)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Computer from './Computer'\r\nimport Player from './Player'\r\nimport Result from './Result'\r\nimport './RPSGame.css'\r\n\r\nclass RPSGame extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"rps_game\">\r\n                <div className=\"row mt-5\">\r\n                    <div className=\"col-4\">\r\n                        <Player />\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <Result />\r\n                        <button onClick={() => {\r\n                            this.props.playgame()\r\n                        }} className=\"btn btn-success mt-5\">Play Game</button>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <Computer />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        playgame: () => {\r\n            let count = 0;\r\n            let randomComputerItem = setInterval(() => {\r\n                dispatch({\r\n                    type: 'PLAY_GAME',\r\n                })\r\n                count++;\r\n                if (count >= 20) {\r\n                    clearInterval(randomComputerItem);\r\n                    dispatch({\r\n                        type: 'END_GAME',\r\n                    })\r\n                }\r\n            }, 40);\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(RPSGame)\r\n","import './App.css';\nimport RPSGame from './RPSGame/RPSGame';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RPSGame />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const rpsState = {\r\n  dataRPS: [\r\n    {\r\n      id: \"scissors\",\r\n      image:\r\n        \"https://res.cloudinary.com/dtjin3cf6/image/upload/v1668921108/Cyberlearn/ReactJS/Course%202%20-%20ReactJS%20Components/Projects/rock_paper_scissors_game/keo_ygphst.png\",\r\n      value: false,\r\n    },\r\n    {\r\n      id: \"rock\",\r\n      image:\r\n        \"https://res.cloudinary.com/dtjin3cf6/image/upload/v1668921108/Cyberlearn/ReactJS/Course%202%20-%20ReactJS%20Components/Projects/rock_paper_scissors_game/bua_airw32.png\",\r\n      value: true,\r\n    },\r\n    {\r\n      id: \"paper\",\r\n      image:\r\n        \"https://res.cloudinary.com/dtjin3cf6/image/upload/v1668921108/Cyberlearn/ReactJS/Course%202%20-%20ReactJS%20Components/Projects/rock_paper_scissors_game/bao_qn19h6.png\",\r\n      value: false,\r\n    },\r\n  ],\r\n  result: `I'm Iron Man, I love You 3000`,\r\n  numberOfWin: 0,\r\n  numberOfPlayed: 0,\r\n  computer: {\r\n    id: \"scissors\",\r\n    image:\r\n      \"https://res.cloudinary.com/dtjin3cf6/image/upload/v1668921108/Cyberlearn/ReactJS/Course%202%20-%20ReactJS%20Components/Projects/rock_paper_scissors_game/keo_ygphst.png\",\r\n    value: false,\r\n  },\r\n};\r\n\r\nconst RPSReducer = (state = rpsState, action) => {\r\n  switch (action.type) {\r\n    case \"BETTED\": {\r\n      let newDataRPS = [...state.dataRPS];\r\n      newDataRPS = newDataRPS.map((item, index) => {\r\n        if (item.id === action.bettedId) {\r\n          return { ...item, value: true };\r\n        }\r\n        return { ...item, value: false };\r\n      });\r\n\r\n      // let index = newDataRPS.findIndex(item => item.id === action.bettedId);\r\n      // if (index !== -1) {\r\n      //     newDataRPS[index].value = true;\r\n      // }\r\n      // console.log('you betted: ' + newDataRPS[index].id);\r\n\r\n      state.dataRPS = newDataRPS;\r\n      return { ...state };\r\n    }\r\n\r\n    case \"PLAY_GAME\": {\r\n      console.log(\"YOU JUST CLICKED PLAY GAME\");\r\n      let randomNumber = Math.floor(Math.random() * 3);\r\n      let newComputer = state.dataRPS[randomNumber];\r\n\r\n      state.computer = newComputer;\r\n      return { ...state };\r\n    }\r\n\r\n    case \"END_GAME\": {\r\n      let player = state.dataRPS.find((item) => item.value === true);\r\n      let computer = state.computer;\r\n\r\n      console.log(\"player: \" + player.id);\r\n      console.log(\"computer: \" + computer.id);\r\n\r\n      switch (player.id) {\r\n        case \"scissors\":\r\n          if (computer.id === \"scissors\") {\r\n            state.result = \"HOÀ NHAU !!!\";\r\n          } else if (computer.id === \"rock\") {\r\n            state.result = \"BẠN THUA !!!\";\r\n          } else {\r\n            state.result = `I'm Iron Man, I love You 3000`;\r\n            state.numberOfWin += 1;\r\n          }\r\n          break;\r\n\r\n        case \"rock\":\r\n          if (computer.id === \"rock\") {\r\n            state.result = \"HOÀ NHAU !!!\";\r\n          } else if (computer.id === \"paper\") {\r\n            state.result = \"BẠN THUA !!!\";\r\n          } else {\r\n            state.result = `I'm Iron Man, I love You 3000`;\r\n            state.numberOfWin += 1;\r\n          }\r\n          break;\r\n\r\n        case \"paper\":\r\n          if (computer.id === \"paper\") {\r\n            state.result = \"HOÀ NHAU !!!\";\r\n          } else if (computer.id === \"scissors\") {\r\n            state.result = \"BẠN THUA !!!\";\r\n          } else {\r\n            state.result = `I'm Iron Man, I love You 3000`;\r\n            state.numberOfWin += 1;\r\n          }\r\n          break;\r\n\r\n        default:\r\n          return { ...state };\r\n      }\r\n\r\n      state.numberOfPlayed += 1;\r\n\r\n      return { ...state };\r\n    }\r\n\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default RPSReducer;\r\n","import {combineReducers} from 'redux';\r\nimport RPSReducer from './RPSReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    RPSReducer: RPSReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// set up redux\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport rootReducer from './redux/rootReducer';\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}